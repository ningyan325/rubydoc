/*
 * Ruby Documenting API
 * The Ruby is a nickname of marketing project in IBM, and Ruby Documenting API is a set of RESTful interface/specification that helping development team to build the IBM marketing Ruby Application.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: nyan@us.ibm.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.CosInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.File;
import javax.validation.constraints.*;

/**
 * Document
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2019-01-04T19:31:15.060Z[GMT]")public class Document   {
  @JsonProperty("documentId")
  private Integer documentId = null;

  @JsonProperty("name")
  private File name = null;

  @JsonProperty("status")
  private File status = null;

  @JsonProperty("documenType")
  private File documenType = null;

  @JsonProperty("storageType")
  private File storageType = null;

  @JsonProperty("storageInfo")
  private CosInfo storageInfo = null;

  public Document documentId(Integer documentId) {
    this.documentId = documentId;
    return this;
  }

  /**
   * Get documentId
   * @return documentId
   **/
  @JsonProperty("documentId")
  @Schema(required = true, description = "")
  @NotNull
  public Integer getDocumentId() {
    return documentId;
  }

  public void setDocumentId(Integer documentId) {
    this.documentId = documentId;
  }

  public Document name(File name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty("name")
  @Schema(required = true, description = "")
  @NotNull
  public File getName() {
    return name;
  }

  public void setName(File name) {
    this.name = name;
  }

  public Document status(File status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   **/
  @JsonProperty("status")
  @Schema(required = true, description = "")
  @NotNull
  public File getStatus() {
    return status;
  }

  public void setStatus(File status) {
    this.status = status;
  }

  public Document documenType(File documenType) {
    this.documenType = documenType;
    return this;
  }

  /**
   * Get documenType
   * @return documenType
   **/
  @JsonProperty("documenType")
  @Schema(required = true, description = "")
  @NotNull
  public File getDocumenType() {
    return documenType;
  }

  public void setDocumenType(File documenType) {
    this.documenType = documenType;
  }

  public Document storageType(File storageType) {
    this.storageType = storageType;
    return this;
  }

  /**
   * Get storageType
   * @return storageType
   **/
  @JsonProperty("storageType")
  @Schema(required = true, description = "")
  @NotNull
  public File getStorageType() {
    return storageType;
  }

  public void setStorageType(File storageType) {
    this.storageType = storageType;
  }

  public Document storageInfo(CosInfo storageInfo) {
    this.storageInfo = storageInfo;
    return this;
  }

  /**
   * Get storageInfo
   * @return storageInfo
   **/
  @JsonProperty("storageInfo")
  @Schema(required = true, description = "")
  @NotNull
  public CosInfo getStorageInfo() {
    return storageInfo;
  }

  public void setStorageInfo(CosInfo storageInfo) {
    this.storageInfo = storageInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.documentId, document.documentId) &&
        Objects.equals(this.name, document.name) &&
        Objects.equals(this.status, document.status) &&
        Objects.equals(this.documenType, document.documenType) &&
        Objects.equals(this.storageType, document.storageType) &&
        Objects.equals(this.storageInfo, document.storageInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentId, name, status, documenType, storageType, storageInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    documenType: ").append(toIndentedString(documenType)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    storageInfo: ").append(toIndentedString(storageInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
